this.BX=this.BX||{},function(e,t){"use strict";var n,o,a,r=(o=[],a=0,(n=localStorage.commands)&&(o=JSON.parse(n)),{getNextCommand:function(){return--a>=1?o[a-1]:""},getPrevCommand:function(){return++a<=o.length?o[a-1]:""},addCommand:function(e){o.length>100&&o.shift(),o.push(e),localStorage.commands=JSON.stringify(o)}});var s,i=(s=function(e,t){return BX.ajax.runAction("vasoft:git.ConsoleController."+e,{json:t})},{init:function(){return s("environment",{})},execute:function(e){return s("execute",{command:e})}}),u={components:{CommandLine:{components:{CommandInput:{directives:{Focus:{mounted:function(e,t){t.value&&e.focus()}}},props:{modelValue:String,autocomplete:Array},data:function(){return{echo:""}},emits:["update:modelValue","execute"],methods:{keydown:function(e){return 9===e.keyCode?(this.$emit("update:modelValue",this.echo),e.preventDefault(),!1):13===e.keyCode?(""!==this.modelValue&&(r.addCommand(this.modelValue),this.$emit("execute")),e.preventDefault(),!1):38===e.keyCode?(this.$emit("update:modelValue",r.getPrevCommand()),e.preventDefault(),!1):40===e.keyCode?(this.$emit("update:modelValue",r.getNextCommand()),e.preventDefault(),!1):void 0},update:function(){this.echo=this.modelValue+this.search(this.modelValue)},search:function(e){var t=[];for(var n in this.autocomplete)if(this.autocomplete.hasOwnProperty(n)){var o=new RegExp(n);e.match(o)&&(t=this.autocomplete[n])}var a=e.split(" ").pop(),r="";if(""!==a)for(var s=0;s<t.length;s++){var i=t[s];if(i.length>a.length&&i.substring(0,a.length)===a){r=i.substring(a.length,i.length);break}}return r}},template:'\n      <div class="vsg-input">\n      <input type="text" class="vsg-input__input"\n             v-focus="true"\n             @input="$emit(\'update:modelValue\',$event.target.value)"\n             v-model="modelValue"\n             @keydown="keydown"\n             @keyup="update"/>\n      <div class="vsg-input__echo">{{echo}}</div>\n      </div>\n    '}},props:{user:String,path:String,autocomplete:Array},data:function(){return{command:""}},emits:["execute"],methods:{exec:function(){this.$emit("execute",this.command),this.command=""}},template:'\n      <div class="vsg-cmd">\n      <div class="vsg-cmd__info">{{path}}</div>\n      <div class="vsg-cmd__info">{{user}}$</div>\n      <CommandInput class="vsg-cmd__input" v-model="command" :autocomplete="autocomplete" @execute="exec"/>\n      </div>\n    '}},data:function(){return{user:"",path:"",autocomplete:[],output:"",error:""}},methods:{scroll:function(){},exec:function(e){i.execute(e).then(this.onData).catch(this.onError)},onError:function(e){if(e.hasOwnProperty("errors")&&e.errors.length>0){for(var t=0,n=e.errors.length,o="";t<n;++t){var a=e.errors[t];a.hasOwnProperty("code")&&a.hasOwnProperty("message")&&a.code>=5e3&&(o+="\n"+e.errors[t].message)}this.error=o}},onData:function(e){e.hasOwnProperty("data")&&(e.data.hasOwnProperty("user")&&(this.user=e.data.user),e.data.hasOwnProperty("path")&&(this.path=e.data.path),e.data.hasOwnProperty("autocomplete")&&(this.autocomplete=e.data.autocomplete),e.data.hasOwnProperty("output")&&(this.output=e.data.output),e.data.hasOwnProperty("error")&&(this.error=e.data.error))}},updated:function(){var e=this.$el.querySelector("#vsg-terminal");e.scrollTop=e.scrollHeight},beforeMount:function(){i.init().then(this.onData)},template:'\n      <div class="vsg-console">\n      <pre id="vsg-terminal" class="vsg-terminal" v-show="output.length>0">{{output}}</pre>\n      <pre class="vsg-error" v-show="error.length>0">{{error}}</pre>\n      <CommandLine :user="user" :path="path" :autocomplete="autocomplete" @execute="exec"/>\n      </div>\n    '};function l(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}var c=new WeakMap,d=new WeakMap,p=function(){function e(t){babelHelpers.classCallCheck(this,e),l(this,c,{writable:!0,value:void 0}),l(this,d,{writable:!0,value:void 0}),babelHelpers.classPrivateFieldSet(this,d,document.querySelector(t))}return babelHelpers.createClass(e,[{key:"start",value:function(){babelHelpers.classPrivateFieldSet(this,c,t.BitrixVue.createApp({name:"Git Console Application",components:{Console:u},template:"<Console/>"})),babelHelpers.classPrivateFieldGet(this,c).mount(babelHelpers.classPrivateFieldGet(this,d))}}]),e}();e.GitConsole=p}(this.BX.Vasoft=this.BX.Vasoft||{},BX.Vue3);
